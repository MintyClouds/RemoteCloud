version: '3.7'
services:
  traefik:
    image: traefik:v2.2
    container_name: traefik
    restart: always
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=myemail@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.docker_data/nextcloud/letsencrypt:/letsencrypt
    networks:
      - nextcloud
  db:
    restart: always
    image: postgres:11
    environment:
    - POSTGRES_USER=${NEXTCLOUD_PG_USER}
    - POSTGRES_PASSWORD=${NEXTCLOUD_PG_PASSWORD}
    - POSTGRES_DB=${NEXTCLOUD_PG_DB}
    volumes:
    - ./.docker_data/nextcloud/db:/var/lib/postgresql/data
    networks:
      - nextcloud
  redis:
    image: redis:latest
    restart: always
    networks:
      - nextcloud
    volumes:
      - ./.docker_data/nextcloud/redis:/var/lib/redis
  nextcloud:
    image: nextcloud:latest
    restart: always
    depends_on:
      - redis
      - db
    labels:
      - traefik.http.routers.nextcloud.middlewares=nextcloud,nextcloud_redirect
      - traefik.http.routers.nextcloud.tls.certresolver=myresolver
      - traefik.http.routers.nextcloud.rule=Host(`next.${ROOT_DOMAIN}`)
      - traefik.http.middlewares.nextcloud.headers.customFrameOptionsValue=ALLOW-FROM https://${ROOT_DOMAIN}
      - traefik.http.middlewares.nextcloud.headers.contentSecurityPolicy=frame-ancestors 'self' ${ROOT_DOMAIN} *.mydomain.net
      - traefik.http.middlewares.nextcloud.headers.stsSeconds=155520011
      - traefik.http.middlewares.nextcloud.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.nextcloud.headers.stsPreload=true
      - traefik.http.middlewares.nextcloud_redirect.redirectregex.regex=/.well-known/(card|cal)dav
      - traefik.http.middlewares.nextcloud_redirect.redirectregex.replacement=/remote.php/dav/
    environment:
      - POSTGRES_USER=${NEXTCLOUD_PG_USER}
      - POSTGRES_PASSWORD=${NEXTCLOUD_PG_PASSWORD}
      - POSTGRES_DB=${NEXTCLOUD_PG_DB}
      - POSTGRES_HOST=db
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - REDIS_HOST=redis
      - NEXTCLOUD_TRUSTED_DOMAINS=next.${ROOT_DOMAIN}
      - TRUSTED_PROXIES=172.18.0.0/16
    volumes:
      - ./.docker_data/nextcloud/www:/var/www/html
    networks:
      - nextcloud

  mailfence:
    image: nginx:1.21.1
    container_name: nginx-mailfence-site
    restart: unless-stopped
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
    labels:
      - traefik.http.routers.mailproxy.tls.certresolver=myresolver
      - traefik.http.routers.mailproxy.rule=Host(`mfproxy.${ROOT_DOMAIN}`)
    networks:
      - nextcloud

networks:
  nextcloud:
